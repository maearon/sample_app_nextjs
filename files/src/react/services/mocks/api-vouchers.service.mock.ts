import {rest} from 'msw';
import {environment} from 'src/environments/environment';
import {
  createPaginationHandler,
  createDetailHandler,
  createFixResponseHandler,
} from 'src/react/lib/mock-helper';

const voucherBatches = [
  {
    _id: '6023667632f9210010ba5534',
    id: '6023667632f9210010ba5534',
    vouchersCount: 4,
    redeemedVouchersCount: 1,
    outlets: [],
    rules: [
      {
        _id: '6024bbbd65dfe80017732333',
        name: 'a1',
        amount: 100,
        tag: 'a1',
        type: 'topup-regular',
        batchId: '6024bbbd65dfe80017732332',
        __v: 0,
        createdAt: '2021-02-11T05:08:13.639Z',
        updatedAt: '2021-02-11T05:08:13.639Z',
      },
    ],
    content: {tac: [], howToClaim: []},
    displayAs: 'text',
    name: 'AUTO batchBLPZB',
    startDate: '2021-02-10T04:52:14.000Z',
    redeemType: 'registration',
    generationType: 'instant',
    expiryDate: '2099-10-20T09:56:06.086Z',
    description: null,
    termContent: null,
    termsUrl: null,
    bannerUrl: null,
    iconUrl: null,
    enterprise: 'setel',
    triggers: [],
    createdAt: '2021-02-10T04:52:06.884Z',
    updatedAt: '2021-02-10T04:52:37.558Z',
    __v: 1,
  },
  {
    _id: '600514f9f7f941001764e351',
    vouchersCount: 4,
    redeemedVouchersCount: 1,
    outlets: [],
    content: {tac: [], howToClaim: []},
    rules: [
      {
        _id: '6024bbbd65dfe80017732333',
        name: 'a1',
        amount: 100,
        tag: 'a1',
        type: 'topup-regular',
        batchId: '6024bbbd65dfe80017732332',
        __v: 0,
        createdAt: '2021-02-11T05:08:13.639Z',
        updatedAt: '2021-02-11T05:08:13.639Z',
      },
    ],
    displayAs: 'text',
    name: 'AUTO batchLJZYM',
    startDate: '2021-01-18T04:56:32.000Z',
    redeemType: 'registration',
    generationType: 'instant',
    expiryDate: '2099-10-20T09:56:06.086Z',
    description: null,
    termContent: null,
    termsUrl: null,
    bannerUrl: null,
    iconUrl: null,
    enterprise: 'setel',
    triggers: [],
    createdAt: '2021-01-18T04:56:25.167Z',
    updatedAt: '2021-01-18T04:56:41.586Z',
    __v: 1,
  },
  {
    _id: '60050f73ae212b001709db40',
    vouchersCount: 4,
    redeemedVouchersCount: 1,
    outlets: [],
    content: {tac: [], howToClaim: []},
    rules: [
      {
        _id: '6024bbbd65dfe80017732333',
        name: 'a1',
        amount: 100,
        tag: 'a1',
        type: 'topup-regular',
        batchId: '6024bbbd65dfe80017732332',
        __v: 0,
        createdAt: '2021-02-11T05:08:13.639Z',
        updatedAt: '2021-02-11T05:08:13.639Z',
      },
    ],
    displayAs: 'text',
    name: 'AUTO batchVKBUC',
    startDate: '2021-01-18T04:32:58.000Z',
    redeemType: 'registration',
    generationType: 'instant',
    expiryDate: '2099-10-20T09:56:06.086Z',
    description: null,
    termContent: null,
    termsUrl: null,
    bannerUrl: null,
    iconUrl: null,
    enterprise: 'setel',
    triggers: [],
    createdAt: '2021-01-18T04:32:51.450Z',
    updatedAt: '2021-01-18T04:33:09.633Z',
    __v: 1,
  },
  {
    _id: '5fd5e053cd83a600176d944b',
    vouchersCount: 1000,
    redeemedVouchersCount: 18,
    outlets: [],
    content: {title: {en: 'Registration voucher v2'}, tac: [], howToClaim: []},
    rules: [
      {
        _id: '6024bbbd65dfe80017732333',
        name: 'a1',
        amount: 100,
        tag: 'a1',
        type: 'topup-regular',
        batchId: '6024bbbd65dfe80017732332',
        __v: 0,
        createdAt: '2021-02-11T05:08:13.639Z',
        updatedAt: '2021-02-11T05:08:13.639Z',
      },
    ],
    displayAs: 'text',
    name: 'Registration voucher v2',
    startDate: '2020-12-13T09:36:45.000Z',
    redeemType: 'registration',
    generationType: 'instant',
    redeemExpiry: {days: 1000},
    prefix: 'vcr3',
    expiryDate: '2023-09-09T09:36:45.000Z',
    enterprise: 'setel',
    triggers: [],
    createdAt: '2020-12-13T09:35:15.959Z',
    updatedAt: '2020-12-17T08:31:06.511Z',
    __v: 1,
  },
  {
    _id: '5eaade755aec0d0010099515',
    name: 'AUTO batchWKBOE',
    rules: [
      {
        _id: '6024bbbd65dfe80017732333',
        name: 'a1',
        amount: 100,
        tag: 'a1',
        type: 'topup-regular',
        batchId: '6024bbbd65dfe80017732332',
        __v: 0,
        createdAt: '2021-02-11T05:08:13.639Z',
        updatedAt: '2021-02-11T05:08:13.639Z',
      },
    ],
    startDate: '2019-10-20T09:56:06.086Z',
    vouchersCount: 4,
    redeemType: 'registration',
    generationType: 'instant',
    expiryDate: '2099-10-20T09:56:06.086Z',
    createdAt: '2020-04-30T14:19:33.700Z',
    updatedAt: '2020-04-30T14:19:33.792Z',
    __v: 1,
    content: {description: {}, title: {en: 'AUTO batchWKBOE'}, howToClaim: [], tac: []},
    enterprise: 'setel',
  },
  {
    _id: '5ea97af2ebd2d80010b649b3',
    name: 'AUTO batchOAAOS',
    startDate: '2019-10-20T09:56:06.086Z',
    rules: [
      {
        _id: '6024bbbd65dfe80017732333',
        name: 'a1',
        amount: 100,
        tag: 'a1',
        type: 'topup-regular',
        batchId: '6024bbbd65dfe80017732332',
        __v: 0,
        createdAt: '2021-02-11T05:08:13.639Z',
        updatedAt: '2021-02-11T05:08:13.639Z',
      },
    ],
    vouchersCount: 4,
    redeemType: 'registration',
    generationType: 'instant',
    expiryDate: '2099-10-20T09:56:06.086Z',
    createdAt: '2020-04-29T13:02:42.461Z',
    updatedAt: '2020-04-29T13:02:42.525Z',
    __v: 1,
    content: {description: {}, title: {en: 'AUTO batchOAAOS'}, howToClaim: [], tac: []},
    enterprise: 'setel',
  },
  {
    _id: '5ea97745ebd2d80010b649a2',
    name: 'AUTO batchSAMAB',
    startDate: '2019-10-20T09:56:06.086Z',
    vouchersCount: 4,
    redeemType: 'registration',
    rules: [
      {
        _id: '6024bbbd65dfe80017732333',
        name: 'a1',
        amount: 100,
        tag: 'a1',
        type: 'topup-regular',
        batchId: '6024bbbd65dfe80017732332',
        __v: 0,
        createdAt: '2021-02-11T05:08:13.639Z',
        updatedAt: '2021-02-11T05:08:13.639Z',
      },
    ],
    generationType: 'instant',
    expiryDate: '2099-10-20T09:56:06.086Z',
    createdAt: '2020-04-29T12:47:01.733Z',
    updatedAt: '2020-04-29T12:47:01.805Z',
    __v: 1,
    content: {description: {}, title: {en: 'AUTO batchSAMAB'}, howToClaim: [], tac: []},
    enterprise: 'setel',
  },
  {
    _id: '5ea96d3ffbe6c0001061741a',
    name: 'AUTO batchSJUYJ',
    startDate: '2019-10-20T09:56:06.086Z',
    vouchersCount: 4,
    redeemType: 'registration',
    generationType: 'instant',
    rules: [
      {
        _id: '6024bbbd65dfe80017732333',
        name: 'a1',
        amount: 100,
        tag: 'a1',
        type: 'topup-regular',
        batchId: '6024bbbd65dfe80017732332',
        __v: 0,
        createdAt: '2021-02-11T05:08:13.639Z',
        updatedAt: '2021-02-11T05:08:13.639Z',
      },
    ],
    expiryDate: '2099-10-20T09:56:06.086Z',
    createdAt: '2020-04-29T12:04:15.591Z',
    updatedAt: '2020-04-29T12:04:15.707Z',
    __v: 1,
    content: {description: {}, title: {en: 'AUTO batchSJUYJ'}, howToClaim: [], tac: []},
    enterprise: 'setel',
  },
];

const MOCK_LIST_VOUCHERS_BY_USER_ID = [
  {
    status: 'voided',
    uniquenessLevel: 'system',
    _id: '6093b696b5070f0010b6f7b8',
    batchId: '6093b696b5070f0010b6f7b5',
    serialNumber: 'ec773977d6b7d270c830',
    code: 'ephgjm3win',
    active: true,
    startDate: '2021-05-06T09:28:20.000Z',
    redeemType: 'topup',
    redeemExpiry: {
      date: '2021-05-14T09:25:32.000Z',
    },
    expiryDate: '2021-05-14T09:25:32.000Z',
    __v: 0,
    createdAt: '2021-05-06T09:27:50.623Z',
    updatedAt: '2021-05-06T10:04:40.536Z',
    linkedAt: '2021-05-06T10:03:18.058Z',
    userId: '48824b7a-3fd2-4a31-8d4a-2ef9a5fe8ff7',
    redeemedAt: '2021-05-06T10:03:18.173Z',
    rules: [
      {
        _id: '6093bee67afee10010d33c04',
        name: 'epwin rule 1',
        amount: 50,
        tag: 'something',
        type: 'topup-regular',
        voucherId: '6093b696b5070f0010b6f7b8',
        status: 'succeeded',
        referenceId: '6093b696b5070f0010b6f7b8-6093b696b5070f0010b6f7b6',
        expiryDate: '2021-05-12T09:26:32.000Z',
        createdAt: '2021-05-06T10:03:18.067Z',
        updatedAt: '2021-05-06T10:03:18.676Z',
        __v: 0,
      },
      {
        _id: '6093bee67afee10010d33c05',
        name: 'epwin rule 2',
        amount: 25,
        tag: 'somethingelse',
        type: 'topup-bonus',
        voucherId: '6093b696b5070f0010b6f7b8',
        status: 'succeeded',
        referenceId: '6093b696b5070f0010b6f7b8-6093b696b5070f0010b6f7b7',
        expiryDate: '2021-05-13T09:26:52.000Z',
        createdAt: '2021-05-06T10:03:18.067Z',
        updatedAt: '2021-05-06T10:03:19.983Z',
        __v: 0,
      },
    ],
    batchName: 'Epwin Teset Voucher',
  },
  {
    status: 'redeemed',
    uniquenessLevel: 'system',
    _id: '6093b696b5070f0010b6f7ba',
    batchId: '6093b696b5070f0010b6f7b5',
    serialNumber: '406c23ba3f00f70806a9',
    code: 'epd3zv9win',
    active: true,
    startDate: '2021-05-06T09:28:20.000Z',
    redeemType: 'topup',
    redeemExpiry: {
      date: '2021-05-14T09:25:32.000Z',
    },
    expiryDate: '2021-05-14T09:25:32.000Z',
    __v: 0,
    createdAt: '2021-05-06T09:27:50.623Z',
    updatedAt: '2021-05-06T10:22:57.919Z',
    linkedAt: '2021-05-06T10:22:56.936Z',
    userId: '48824b7a-3fd2-4a31-8d4a-2ef9a5fe8ff7',
    redeemedAt: '2021-05-06T10:22:56.999Z',
    rules: [
      {
        _id: '6093c3807afee10010d33c09',
        name: 'epwin rule 2',
        amount: 25,
        tag: 'somethingelse',
        type: 'topup-bonus',
        voucherId: '6093b696b5070f0010b6f7ba',
        status: 'succeeded',
        referenceId: '6093b696b5070f0010b6f7ba-6093b696b5070f0010b6f7b7',
        expiryDate: '2021-05-13T09:26:52.000Z',
        createdAt: '2021-05-06T10:22:56.945Z',
        updatedAt: '2021-05-06T10:22:57.919Z',
        __v: 0,
      },
      {
        _id: '6093c3807afee10010d33c08',
        name: 'epwin rule 1',
        amount: 50,
        tag: 'something',
        type: 'topup-regular',
        voucherId: '6093b696b5070f0010b6f7ba',
        status: 'succeeded',
        referenceId: '6093b696b5070f0010b6f7ba-6093b696b5070f0010b6f7b6',
        expiryDate: '2021-05-12T09:26:32.000Z',
        createdAt: '2021-05-06T10:22:56.945Z',
        updatedAt: '2021-05-06T10:22:57.540Z',
        __v: 0,
      },
    ],
    batchName: 'Epwin Teset Voucher',
  },
  {
    status: 'voided',
    uniquenessLevel: 'system',
    _id: '6093b696b5070f0010b6f7bb',
    batchId: '6093b696b5070f0010b6f7b5',
    serialNumber: '5fd9fcae82ef2bb08a68',
    code: 'epae9bpwin',
    active: true,
    startDate: '2021-05-06T09:28:20.000Z',
    redeemType: 'topup',
    redeemExpiry: {
      date: '2021-05-14T09:25:32.000Z',
    },
    expiryDate: '2021-05-14T09:25:32.000Z',
    __v: 0,
    createdAt: '2021-05-06T09:27:50.623Z',
    updatedAt: '2021-05-06T10:25:15.745Z',
    linkedAt: '2021-05-06T10:23:43.793Z',
    userId: '48824b7a-3fd2-4a31-8d4a-2ef9a5fe8ff7',
    redeemedAt: '2021-05-06T10:23:43.840Z',
    rules: [
      {
        _id: '6093c3af7afee10010d33c0b',
        name: 'epwin rule 1',
        amount: 50,
        tag: 'something',
        type: 'topup-regular',
        voucherId: '6093b696b5070f0010b6f7bb',
        status: 'succeeded',
        referenceId: '6093b696b5070f0010b6f7bb-6093b696b5070f0010b6f7b6',
        expiryDate: '2021-05-12T09:26:32.000Z',
        createdAt: '2021-05-06T10:23:43.800Z',
        updatedAt: '2021-05-06T10:23:44.202Z',
        __v: 0,
      },
      {
        _id: '6093c3af7afee10010d33c0c',
        name: 'epwin rule 2',
        amount: 25,
        tag: 'somethingelse',
        type: 'topup-bonus',
        voucherId: '6093b696b5070f0010b6f7bb',
        status: 'succeeded',
        referenceId: '6093b696b5070f0010b6f7bb-6093b696b5070f0010b6f7b7',
        expiryDate: '2021-05-13T09:26:52.000Z',
        createdAt: '2021-05-06T10:23:43.800Z',
        updatedAt: '2021-05-06T10:23:44.753Z',
        __v: 0,
      },
    ],
    batchName: 'Epwin Teset Voucher',
  },
];

const MOCK_EXT_VOUCHERS_REPORT = [
  {
    createdAt: '2020-08-12T17:14:25.451Z',
    docName: 'e-pay/test/e-pay-test-1584007836941.csv',
    records: {
      date: '2020-03-12T01:00:00.000Z',
      match: false,
      retailerName: 'rn1',
      terminalId: 'test-term-1',
      title: 'p1',
      value: 1,
      voucherSerialNumber: 'sn1',
    },
  },
  {
    createdAt: '2020-08-12T17:14:25.451Z',
    docName: 'e-pay/test/e-pay-test-1584007836942.csv',
    records: {
      date: '2020-03-12T01:00:00.000Z',
      match: false,
      retailerName: 'rn2',
      terminalId: 'test-term-2',
      title: 'p2',
      value: 2,
      voucherSerialNumber: 'sn2',
    },
  },
  {
    createdAt: '2020-08-12T17:14:25.451Z',
    docName: 'e-pay/test/e-pay-test-1584007836943.csv',
    records: {
      date: '2020-03-12T01:00:00.000Z',
      match: false,
      retailerName: 'rn3',
      terminalId: 'test-term-3',
      title: 'p3',
      value: 3,
      voucherSerialNumber: '3',
    },
  },
  {
    createdAt: '2020-08-12T17:14:25.451Z',
    docName: 'e-pay/test/e-pay-test-1584007836944.csv',
    records: {
      date: '2020-03-12T01:00:00.000Z',
      match: true,
      retailerName: 'rn4',
      terminalId: 'test-term-4',
      title: 'p4',
      value: 5,
      voucherSerialNumber: 'sn4',
    },
  },
];

const BASE_URL = `${environment.vouchersApiBaseUrl}/api/vouchers`;

export const handlers = [
  rest.get(`${BASE_URL}/admin/vouchers/:id`, (_, res, ctx) =>
    res(
      ctx.status(404),
      ctx.json({message: 'Voucher not found', errorCode: '2201001', statusCode: 404}),
    ),
  ),
  rest.post(`${BASE_URL}/admin/vouchers/void/:id`, (_, res, ctx) =>
    res(
      ctx.status(404),
      ctx.json({message: 'Voucher not found', errorCode: '2201001', statusCode: 404}),
    ),
  ),
  rest.get(`${BASE_URL}/admin/vouchers-batch`, createPaginationHandler(voucherBatches)),
  rest.get(`${BASE_URL}/admin/vouchers-batch/:id`, createDetailHandler(voucherBatches, 'id')),
  rest.get(
    `${BASE_URL}/admin/vouchers-batch/:id/batch-breakdown`,
    createFixResponseHandler({issued: 20, granted: 0, redeemed: 0, expired: 0, voided: 0}),
  ),
  rest.get(
    `${BASE_URL}/admin/vouchers/user/:id`,
    createPaginationHandler(MOCK_LIST_VOUCHERS_BY_USER_ID),
  ),
  rest.get(
    `${BASE_URL}/admin/ext-vouchers-report`,
    createPaginationHandler(MOCK_EXT_VOUCHERS_REPORT),
  ),
  rest.post(`${BASE_URL}/admin/vouchers-batch`, (req, res, ctx) => {
    const now = new Date();
    const result = {
      id: now.getTime().toString(),
      _id: now.getTime().toString(),
      createdAt: now.toISOString(),
      updatedAt: now.toISOString(),
      ...(req.body as Record<string, any>),
    };
    voucherBatches.unshift(result as any);
    return res(ctx.json(result), ctx.status(201));
  }),
  rest.put(`${BASE_URL}/admin/vouchers-batch/:id`, (req, res, ctx) => {
    const currentRecord = voucherBatches.find((batch) => batch._id === req.params.id);

    currentRecord.updatedAt = new Date().toISOString();

    Object.keys(req.body).forEach((key) => {
      currentRecord[key] = req.body[key];
    });

    return res(ctx.json(currentRecord));
  }),
];
